서블릿은 JSP 표준이 나오기 전에 만들어진 표준으로 자바에서 웹 애플리케이션을 개발할 수 있도록 하기
위해 만들어 졌으며 자바 클래스를 웹에서 실행 할 수 있도록 한 웹 프로그램.

작성과정
- 서블릿 규칙에 따라 자바 코드 생성
- 경우에 따라서 web.xml 파일에서 서블릿을 주소와 매핑
- 웹 컨테이너 재실행

서블릿 요청처리
- 요청 방식에 따라 doGet이나 doPost 메서드를 재정의해서 처리
- service 메서드를 재정의해서 사용할 수 있는데 이 메서드는 get 방식이나 post 방식 상관없이 호출되며 
  이 메서드가 호출되면 doGet이나 doPost 메서드는 호출되지 않는다.

서블릿에서 요청을 처리하기 위해 오버라이딩 한 메서드는 request 객체를 이용해서 웹 브라우저의 요청 정보를 읽어 오던가 
아니면 response를 이용해서 응답을 전송할 수 있다.

응답을 전송하고자 하는 경우는 response 객체의 setContentType()메서드를 이용해서 타입과 인코딩 방식을 지정해 주어야 한글이 깨지지 않는다.
웹 브라우저에 데이터를 전송하려면 getWriter()를 호출해서 문자열 데이터를 출력할 수 있는 PrintWriter를 가져오고 print()나 println()을 이용해서 전송한다

클라이언트측에서 WAS로 요청하는 get방식, post방식
Get방식 - URL값으로 정보가 전송되어 보안에 약함
- 주소와 매개변수를 붙여서 주소 표시줄에 입력하는 방법(?로 구분)
- a 태그를 이용해서 페이지를 요청하는 경우
- form태그에서 명시적으로 GET방식으로 요청하는 경우(method=”get”)
- 매개변수의 데이터는 255자 이내이며 보안성이 없음

Post방식 - header를 이용해 정보가 전송되어 보안에 강함
- form태그에서 명시적으로 POST 방식으로 요청(method=”post”)
- 데이터의 크기에 제한이 없으며 URL에 표시되지 않으므로 보안성이 우수
- 한글 파라미터 전달시 request.setCharacterEncoding(“utf-8”)추가

컨텍스트 패스
WAS에서 웹어플리케이션을 구분하기 위한 path.
해당 웹어플리케이션이름.
이클립스에서 프로젝트를 생성하면, 자동으로 server.xml에 추가. 그러므로, 프로젝트를 삭제하고 다시 같은 이름의 프로젝트를 생성할 수 없다.
